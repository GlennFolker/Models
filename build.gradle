plugins{
    id 'java'
    id 'maven-publish'
}

if(JavaVersion.current().ordinal() < JavaVersion.VERSION_16.ordinal()){
    throw new GradleException('Java 16+ is required for compiling.')
}

sourceSets{
    main{
        java.srcDirs = ['src/']
        resources.srcDirs = ['assets/']
    }

    test{
        java.srcDirs = ['test/']
        resources.srcDirs = ['test/assets/']
    }
}

dependencies{
    annotationProcessor "com.github.Anuken:jabel:$jabelVersion"
    compileOnly "com.github.Anuken.Arc:arc-core:$arcVersion"
    compileOnly "com.github.Anuken.Arc:g3d:$arcVersion"

    testAnnotationProcessor "com.github.Anuken:jabel:$jabelVersion"
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testImplementation "com.github.Anuken.Arc:arc-core:$arcVersion"
    testImplementation "com.github.Anuken.Arc:g3d:$arcVersion"
    testImplementation "com.github.Anuken.Arc:backend-sdl:$arcVersion"
    testImplementation "com.github.Anuken.Arc:natives-desktop:$arcVersion"
}

repositories{
    mavenCentral()
    maven{ url 'https://www.jitpack.io/' }
}

version = projectVersion
group = projectGroup

sourceCompatibility = JavaVersion.VERSION_16
targetCompatibility = JavaVersion.VERSION_1_8

test{
    useJUnitPlatform()
    testLogging{
        exceptionFormat = 'full'
        showStandardStreams = true
    }
}

tasks.withType(JavaCompile){
    options.compilerArgs.addAll(['--release', '8'])
}

tasks.withType(Javadoc){
    options{
        addStringOption('Xdoclint:none', '-quiet')
        addStringOption('-release', '16')
    }
}

task sourcesJar(type: Jar, dependsOn: classes){
    archiveClassifier.set 'sources'
    from sourceSets.main.allSource
}

artifacts{
    archives tasks.sourcesJar
}

java{
    withJavadocJar()
    withSourcesJar()
}

publishing{
    publications{
        maven(MavenPublication){
            from components.java
        }
    }
}
